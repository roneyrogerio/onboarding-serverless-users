service: onboarding-serverless-users

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  memorySize: 128
  timeout: 10
  tracing:
    lambda: true
    apiGateway: true
  layers:
    - !Sub arn:aws:lambda:${AWS::Region}:901920570463:layer:aws-otel-nodejs-amd64-ver-1-6-0:1
  environment:
    DYNAMODB_PERSON_TABLE: ${self:service}-personTable-${sls:stage}
    AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-handler
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Get*
            - dynamodb:Scan*
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:service}-personTable-${sls:stage}

functions:
  createPerson:
    handler: src/handler/createPerson/index.handler
    description: Create new person
    events:
      - http:
          path: /person
          method: post
  getPerson:
    handler: src/handler/getPersonList/index.handler
    description: List all persons
    events:
      - http:
          path: /person
          method: get
  getPersonById:
    handler: src/handler/getPersonById/index.handler
    description: Get person by id
    events:
      - http:
          path: /person/{id}
          method: get
  troubleMaker:
    handler: src/handler/troubleMaker/index.handler
    description: Trouble maker
    events:
      - http:
          path: /trouble-maker
          method: get

resources:
  Resources:
    PersonTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        TableName: ${self:service}-personTable-${sls:stage}

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-prune-plugin
  - serverless-plugin-aws-alerts

custom:
  esbuild:
    minify: false
    bundle: true
    sourcemap: true
    watch:
      pattern: ["src/**/*.ts"]
      ignore: [".serverless/**/*", ".build", ".esbuild"]
  prune:
    automatic: true
    number: 3
  alerts:
    dashboards: true
    topics:
      alarm:
        topic: ${self:service}-${sls:stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: - !Sub ${env:MY_EMAIL}
    definitions:
      functionErrors:
        namespace: "AWS/Lambda"
        actionsEnabled: true
        threshold: 2
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
      functionDuration:
        namespace: "AWS/Lambda"
        metric: Duration
        threshold: 1000
        statistic: Average
        period: 60
        evaluationPeriods: 1
        comparisonOperator: GreaterThanThreshold
    alarms:
      - functionErrors
      - functionDuration
